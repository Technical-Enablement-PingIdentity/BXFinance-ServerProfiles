apiVersion: v1
data:
  SERVER_PROFILE_PATH: profiles/pingdatagovernance
  ROOT_USER_PASSWORD_FILE: /opt/staging/pwd
  ADMIN_USER_PASSWORD_FILE: /opt/staging/pwd
  ENCRYPTION_PASSWORD_FILE: /opt/staging/pwd
kind: ConfigMap
metadata:
  labels:
    role: pingdatagovernance
  name: pingdatagovernance-environment-variables
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingdatagovernance
  name: pingdatagovernance
spec:
  ports:
  - name: https
    port: 3443
    targetPort: 443
  - name: ldaps
    port: 636
    targetPort: 636
  selector:
    role: pingdatagovernance
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: pingdatagovernance
  name: pingdatagovernance
spec:
  replicas: 1
  selector:
    matchLabels:
      role: pingdatagovernance
  template:
    metadata:
      labels:
        role: pingdatagovernance
      name: pingdatagovernance
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: global-env-vars
        # - secretRef:
        #     name: server-profile-url
        #     optional: false
        - secretRef:
            name: devops-secret
            optional: true
        - configMapRef:
            name: pingdatagovernance-environment-variables
        image: pingidentity/pingdatagovernance:8.2.0.3-edge
        name: pingdatagovernance
        env:
        - name: PDG_PROFILE_SHA
          value: ${pingdatagovernanceSha}
        ports:
        - containerPort: 80
        - containerPort: 443
        - containerPort: 636
        resources:
          limits:
            cpu: "2"
            memory: 2.5Gi
          requests:
            cpu: "1"
            memory: 2.5Gi
        volumeMounts:
        - name: pingdatagovernance-license
          mountPath: "/opt/in/instance/PingDataGovernance.lic"
          subPath: PingDataGovernance.lic
          readOnly: true
      volumes:
      - name: pingdatagovernance-license
        secret:
          secretName: pingdatagovernance-license
      initContainers:
      - name: init
        image: curlimages/curl:latest
        command: ['sh', '-c', 'until curl --connect-timeout 1 --silent -k https://pingdirectory:1443/directory/v1 ; do echo waiting for pingdirectory:1443 ; sleep 3 ; done']
